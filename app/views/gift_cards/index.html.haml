= will_paginate @recent_signups, renderer: WillPaginateSemanticUi::ActionView::Renderer
%h1.ui.header.page-header Recent sign-ups who need gift cards
= search_form_for @q_recent_signups, as: :q_signups, url: gift_cards_path, method: :get, class: 'ui form' do |f|
  .three.fields
    .field
      .ui.calendar
        .ui.left.icon.input
          %i.calendar.icon
          = f.text_field :created_at_date_gteq, placeholder: 'People created on or after'
    .field
      = f.submit 'Search', class: "ui green button"
      = link_to 'Clear Search', request.path, class:"ui button"
#error-div
- @new_gift_cards.each_with_index do |gift_card, index|
  .ui.padded.raised.segment{ id: "person-#{@recent_signups[index].id}"}
    .ui.grid
      .row
        .six.wide.column
          .ui.large.list
            .item
              %i.user.icon
              .strong.content= @recent_signups[index].initials
            .item
              %i.marker.icon
              - address = city_state_to_sentence(@recent_signups[index])
              .content= address.blank? ? 'No address' : address
            .item
              %i.comments.icon
              .content= @recent_signups[index].verified || 'Not verified'
        .ten.wide.column
          = form_for [@recent_signups[index], gift_card], remote: true, html: { class: 'ui form' } do |form|
            = form.hidden_field :person_id, value: @recent_signups[index].id
            = form.hidden_field :reason, value: "signup"
            .three.fields
              .field{id: "new-batchid-#{@recent_signups[index].id}"}
                .ui.mini.input
                  = form.text_field :batch_id, placeholder: "Batch ID"
              .field{id: "new-proxyid-#{@recent_signups[index].id}"}
                .ui.mini.input
                  = form.text_field :proxy_id, placeholder: "Proxy ID"
              .field{id: "new-cardnumber-#{@recent_signups[index].id}"}
                .ui.mini.input
                  = form.text_field :gift_card_number, placeholder: '****-****-***'
            .three.fields
              .field{id: "new-expirationdate-#{@recent_signups[index].id}"}
                .ui.mini.input
                  = form.text_field :expiration_date, placeholder: "MM/YY"
              .field
                .ui.mini.left.icon.input
                  %i.dollar.icon
                  = form.text_field :amount, value: "5.00", readonly: true
              .field
                = form.submit 'Add Gift Card', class: "ui mini fluid green button"
      - @recent_signups[index].possible_duplicates.each do |key, val|
        .row
          .column
            .ui.message
              Possible Duplicate ID
              = link_to "#{key} #{val['person'].initials}", person_path(val['person'])
              Matching on
              = val['match_count']
              variables:
              = val['matches_on'].to_sentence
%h1.ui.header Gift Cards
= search_form_for @q_giftcards, url: gift_cards_path, method: :get, class: 'ui form' do |f|
  .three.fields
    .field
      = f.search_field :gift_card_number_cont, class: 'ui mini input', placeholder: 'Gift card number contains'
    .field
      .ui.calendar
        .ui.left.icon.input
          %i.calendar.icon
          = f.text_field :created_at_date_gteq, id: 'datepicker_start', placeholder: 'Created on or after'
    .field
      .ui.calendar
        .ui.left.icon.input
          %i.calendar.icon
          = f.text_field :created_at_date_lteq, id: 'datepicker_end', placeholder: 'Created on or before'
  = f.submit 'Search', class: "ui green button"
  = link_to 'Clear Search', request.path, class:"ui button"
= will_paginate @gift_cards, renderer: WillPaginateSemanticUi::ActionView::Renderer
%table.ui.sortable.striped.table
  %thead
    %tr
      %th ID
      %th Name
      %th Reason
      %th Giftable ID
      %th Batch
      %th Proxy ID
      %th Card Number
      %th Expiration Date
      %th Amount
      %th Created On
      %th.center.aligned Actions
  %tbody#gift_cards
    - @gift_cards.each do |gift_card|
      = render partial: 'gift_card', locals: { gift_card: gift_card }
%br/
= link_to 'New Gift card', new_gift_card_path, class: 'ui green button'
= link_to "Save this list as CSV", gift_cards_path(params.merge(format: 'csv')), class: "ui button"

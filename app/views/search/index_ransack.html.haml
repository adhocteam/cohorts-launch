%p#notice= @success
%p#error= @error
.page-header
  %h1= t '.title', default: "Search Results - Ransack"
.row
  .span12{style: "text-align:right"}
    / Search SQL = <haml:loud> @results.to_sql </haml:loud>
    / <span data-toggle="collapse" data-target="#advanced-search">Show advanced search</span>
= search_form_for @q, url: 'index_ransack', method: :get do |f|
  .span3
    = f.label :full_name_cont
    = f.search_field :full_name_cont
    = f.label :email_address_cont
    = f.search_field :email_address_cont
    = f.label :phone_number_cont
    = f.search_field :phone_number_cont
    = f.label :address_1_cont
    = f.search_field :address_1_cont
    = f.label :postal_code_start
    = f.search_field :postal_code_start
    = f.label :postal_code_not_start
    = f.search_field :postal_code_not_start
    = f.label :preferred_contact_method_cont
    = f.select :preferred_contact_method_cont, [["Email", 'EMAIL'], ["SMS", 'SMS']], {include_blank: true}, {class: "input" }
  .span3
    = f.label :primary_device_id_in
    = f.select :primary_device_id_in, [[human_device_type_name(0),0],[ human_device_type_name(1),1], [human_device_type_name(2),2], [ human_device_type_name(3),  3]], {include_blank: true}, {multiple: true,  class: "multiple", size: '4' }
    = f.label :primary_device_description_cont
    = f.search_field :primary_device_description_cont
    = f.label :primary_connection_id_in
    = f.select :primary_connection_id_in, [[human_connection_type_name(0),0],[ human_connection_type_name(1),1], [human_connection_type_name(4),4], [ human_connection_type_name(3),  3], [human_connection_type_name(2), 2]], {include_blank: true}, {multiple: true,  class: "multiple", size: '5' }
    = f.label :primary_connection_description_cont
    = f.search_field :primary_connection_description_cont
  .span5
    = f.label :tags_id_eq_all
    = f.collection_select :tags_id_eq_all, @tag_list, :id, :name, {include_blank: true}, { multiple: true, size: @tag_list.count + 1 }
    = f.label :participation_type_in
    = f.select :participation_type_in, @participation_list, {include_blank: true}, { multiple: true, size: @participation_list.count + 1 }
    %label{for: "gift_cards_gift_card_number_cont"} Gift card number contains
    = f.search_field :gift_cards_gift_card_number_cont
    %label{for: "additional"} &nbsp;
    %span.btn.btn-default{"data-target" => "#additional-options", "data-toggle" => "collapse"} Click to Show Additional Options
    #additional-options.collapse
      = f.label :verified_eq_any
      = f.select :verified_eq_any, @verified_list, {include_blank: true}, { multiple: true, size: @verified_list.count + 1 }
      = f.label :submissions_raw_content_cont
      = f.search_field :submissions_raw_content_cont
    %br/
    = f.submit 'Search', class: "btn btn-primary"
    = link_to 'Clear Search', request.path, class:"btn"
.span12
  Search Parameters:
  - if params[:q]
    - params[:q].each do |param_key, param_value|
      - if param_value.present? and param_value != [""]
        = param_key
        \: "#{param_value}"
  - else
    None
- if @results.any?
  .row
    .span12
      %p.pull-right
        Showing #{@results.size} #{'result'.pluralize(@results)} of #{@results.count} total
      %table.table.table-striped
        - @results.each_with_index do |result, idx|
          - next unless Person.find_by(id: result.id)
          %tr
            %td.span4
              %strong= link_to "#{result.first_name} #{result.last_name}", person_path(id: result.id)
              = render partial: 'people/add_remove_cart',locals: {person: Person.find_by(id: result.id)}
              %br/
              %br/
              Tags:
              - if !(result.tag_values.blank?)
                = search_result_field result.tag_values, :tags
            %td.span4
              Address: #{search_result_field result.address_1, :address}
              %br/
              City: #{search_result_field result.city, :city}  ZIP: #{search_result_field result.postal_code, :postal_code}
              %br/
              Phone:
              - if (result.phone_number.present?)
                = search_result_field result.phone_number.phony_formatted(format: :national, spaces: '-') , :phone_number
              - else
                = search_result_field result.phone_number, :phone_number
              %br/
              Email: #{search_result_field result.email_address, :email_address}
              %br/
              Verified?: #{search_result_field result.verified, :verified}
            %td.span4
              Primary Device: #{search_result_field result.primary_device_description, :device_description} (#{search_result_field human_device_type_name(result.primary_device_id), :device_id_type})
              %br/
              Secondary Device: #{search_result_field result.secondary_device_description, :device_description} (#{search_result_field human_device_type_name(result.secondary_device_id), :device_id_type})
              %br/
              Primary Connection: #{search_result_field human_connection_type_name(result.primary_connection_id), :connection_id} #{search_result_field result.primary_connection_description, :connection_description}
              %br/
              - if result.secondary_connection_description.present?
                Secondary Connection: #{search_result_field result.secondary_connection_description, :connection_description}
              %br/
              Preferred Contact Method: #{search_result_field result.preferred_contact_method, :preferred_contact_method}
  .row
    .offset4.span8= will_paginate @results, renderer: BootstrapPagination::Rails
  .row
    .span12
      = link_to "Save this list as CSV", search_index_ransack_path(params.merge(format: 'csv').symbolize_keys), class: "btn"
      %span
        = link_to "Export this list to MailChimp", "#", class: "btn", id: "export-to-mailchimp-form-toggle"
      %span= link_to "Send text messages to this list", "#", class: "btn", id: "export-to-twilio-form-toggle"
  .row
    .span12
      #export-to-mailchimp-form{style: "display:none"}
        = form_tag search_export_path, remote: true, class: "form-inline"
        = text_field_tag :segment_name, '', class: "input-xlarge", placeholder: "enter a name for this list (segment)"
        - if params[:q]
          - params[:q].each do |param_key, param_value|
            = hidden_field_tag "q[#{param_key}]", param_value
        = submit_tag "Export", class: "btn btn-primary", data: {disable_with: "Exporting ..."}
    .span12
      #export-to-twilio-form{style: "display:none"}
        = form_tag search_exportTwilio_path, remote: true, class: "form-inline"
        - if params[:q]
          - params[:q].each do |param_key, param_value|
            = hidden_field_tag "q[#{param_key}]", param_value
        = text_area_tag :message1, '', class: "input-xlarge", placeholder: "Enter a message to send (required)", required: true
        %br/
        = text_area_tag :message2, '', class: "input-xlarge", placeholder: "Enter a 2nd message to send. (Optional)"
        %br/
        Twilio-Wufoo Connection? #{select_tag :twiliowufoo_campaign, options_for_select([[nil, nil]] + TwilioWufoo.all.order(:name).collect{|twiliowufoo| [twiliowufoo.name, twiliowufoo.id]}, selected: params[:twiliowufoo_campaign]), class: "input"}
        \#{submit_tag "Send messages through Twilio", class: "btn btn-primary", data: { confirm: 'These messages will be added to the queue and sent as soon as possible. Are you sure you want to send these?' }}
- else
  .row
    .span12{style: "margin-top: 30px;"}
      %p There are no Cohorts members that match your search.

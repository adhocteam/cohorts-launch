%p#notice= @success
%p#error= @error
%h1.ui.dividing.header.page-header= t '.title', default: "Search"
= search_form_for @q, url: 'index', method: :get, class: 'ui form' do |f|
  .ui.vertically.divided.grid
    .equal.width.row
      .column
        %h4.ui.green.header Search for a person
        .field
          = f.label :full_name_cont
          = f.search_field :full_name_cont
        .field
          = f.label :email_address_cont
          = f.search_field :email_address_cont
        .field
          = f.label :phone_number_cont
          = f.search_field :phone_number_cont
        .field
          = f.label :address_1_cont
          = f.search_field :address_1_cont
      .divider-column
        .ui.vertical.divider
      .column
        %h4.ui.green.header Filter by tags and attributes
        .field
          = f.label :tags_id_eq_all, 'Has tags'
          = f.collection_select :tags_id_eq_all, @tag_list, :id, :name, {}, { multiple: true, class: 'ui search selection dropdown', size: @tag_list.count + 1 }
        .field
          = f.label :preferred_contact_method_cont, 'Preferred contact method'
          = f.select :preferred_contact_method_cont, [["Email", 'EMAIL'], ["SMS", 'SMS']], {include_blank: true}, {class: "ui dropdown" }
        .field
          = f.label :postal_code_start
          = f.search_field :postal_code_start
        .field
          = f.label :primary_device_id_in
          = f.select :primary_device_id_in, [[human_device_type_name(0),0],[ human_device_type_name(1),1], [human_device_type_name(2),2], [ human_device_type_name(3),  3]], {}, {multiple: true,  class: "ui search selection dropdown", size: '4' }
        .field
          = f.label :primary_connection_id_in
          = f.select :primary_connection_id_in, [[human_connection_type_name(0),0],[ human_connection_type_name(1),1], [human_connection_type_name(4),4], [ human_connection_type_name(3),  3], [human_connection_type_name(2), 2]], {}, {multiple: true,  class: "ui search selection dropdown", size: '5' }
      .divider-column
        .ui.vertical.divider
      .column
        %h4.ui.green.header Filter by survey responses
        .field
          = f.label :questions_id_eq_any, 'Has answered any of'
          = f.collection_select :questions_id_eq_any, @question_list, :id, :text, {}, { multiple: true, class: 'ui search selection dropdown non-fuzzy', size: @question_list.count + 1 }
        .field
          = f.label :answers_value_cont
          = f.search_field :answers_value_cont
    .equal.width.row
      .right.aligned.column
        = f.submit 'Search', class: "ui green button"
        = link_to 'Clear Search', request.path, class:"ui button"
.ui.grid
  .equal.width.row
    .column
      Search Parameters:
      - if params[:q]
        - params[:q].each do |param_key, param_value|
          - if param_value.present? and param_value != [""]
            = param_key
            \: "#{param_value}"
      - else
        None
    - if @results.any?
      .right.aligned.column
        Showing #{@results.size} #{'result'.pluralize(@results)} of #{@results.count} total
  - if @results.any?
    .equal.width.row
      .column
        %table.ui.striped.table
          %tbody
          - @results.each_with_index do |result, idx|
            - person = Person.find_by(id: result.id)
            - next unless person
            %tr
              %td.seven.wide
                %strong= link_to "#{result.initials}", person_path(id: result.id), class: 'green mr'
                = render partial: 'people/hidden_info_popup', locals: { title: 'full name', hidden_info: person.full_name }
                .ui.green.labels.tag-list
                  = render partial: 'taggings/tagging', collection: person.taggings, locals: { readonly: true }
              %td.five.wide
                .ui.list
                  .item
                    %i.marker.icon.tooltippy{ title: 'Address' }
                    .content
                      .description
                        = render partial: 'people/hidden_info', locals: { title: 'address', hidden_info: address_fields_to_sentence(person)}
                  .item
                    %i.phone.icon.tooltippy{ title: 'Phone Number' }
                    .content
                      .description
                        = render partial: 'people/hidden_info', locals: { title: 'phone number', hidden_info: person.phone_number}
                  .item
                    %i.mail.icon.tooltippy{ title: 'Email address' }
                    .content
                      .description
                        = render partial: 'people/hidden_info', locals: { title: 'email address', hidden_info: person.email_address}
                  .item
                    %i.help.circle.icon.tooltippy{ title: 'Verified?' }
                    .content
                      .description= best_in_place person, :verified
              %td.four.wide
                .ui.list
                  .item
                    %i.desktop.icon.tooltippy{ title: 'Primary Device Description' }
                    .content
                      .description
                        = best_in_place person,:primary_device_description
                        %span.muted
                          (#{best_in_place person, :primary_device_id, as: :select, collection:  Cohorts::Application.config.device_mappings.collect{|i| [i.last, i.first]}})
                  .item
                    %i.mobile.icon.tooltippy{ title: 'Secondary Device Description' }
                    .content
                      .description
                        = best_in_place person,:secondary_device_description
                        %span.muted
                          (#{best_in_place person, :secondary_device_id, as: :select, collection:  Cohorts::Application.config.device_mappings.collect{|i| [i.last, i.first]}})
                  .item
                    %i.wifi.icon.tooltippy{ title: 'Primary Connection Description' }
                    .content
                      .description
                        = best_in_place person,:primary_connection_description
                        %span.muted
                          (#{best_in_place person, :primary_connection_id , as: :select, collection: Cohorts::Application.config.connection_mappings.collect{|i| [i.last,i.first.to_s.humanize]}})
                  .item
                    %i.signal.icon.tooltippy{ title: 'Secondary Connection Description' }
                    .content
                      .description
                        = best_in_place person,:secondary_connection_description
                        %span.muted
                          (#{best_in_place person, :secondary_connection_id , as: :select, collection: Cohorts::Application.config.connection_mappings.collect{|i| [i.last,i.first.to_s.humanize]}})
                  .item
                    %i.text.telephone.icon.tooltippy{ title: 'Preferred Contact Method' }
                    .content
                      .description= best_in_place person, :preferred_contact_method, as: :select, collection: [['SMS','SMS'], ['EMAIL','EMAIL']]
    .equal.width.row
      .column
        = form_for(Tagging.new, url: :taggings_bulk_create, remote: true, html: { class: "ui form" }) do |f|
          = f.hidden_field :taggable_type, value: "Person"
          - @results.each do |result|
            = f.hidden_field :taggable_ids, multiple: true, value: result.id
          .field
            .ui.action.input
              = f.select :name, Tag.order(:name).map { |t| [t.name, t.name] }, {include_blank: 'Add tag to all results'}, { class: 'ui fluid search selection dropdown allow-addition' }
              .ui.green.submit.button{ type: 'submit' }
                %i.tag.icon
                Bulk Add
    .equal.width.row
      .center.aligned.column
        = will_paginate @results, renderer: WillPaginateSemanticUi::ActionView::Renderer
    .equal.width.row
      .column
        = form_tag search_index_path(params.merge(format: 'csv').symbolize_keys), class: "ui form" do
          .field
            = label_tag :submissions, "Submissions to include in CSV"
            = select_tag :submissions, options_for_select(Submission.all.map(&:form_name).uniq), { include_blank: false, multiple: true, class: 'ui search selection dropdown' }
          .field
            = submit_tag 'Export list as CSV', class: 'ui button'
            %span= link_to "Export this list to MailChimp", "#", class: "ui button", id: "export-to-mailchimp-form-toggle"
            %span= link_to "Send text messages to this list", "#", class: "ui button", id: "export-to-twilio-form-toggle"
    .row
      .span12
        #export-to-mailchimp-form{style: "display:none"}
          = form_tag search_export_path, remote: true, class: "form-inline" do
            = text_field_tag :segment_name, '', class: "input-xlarge", placeholder: "enter a name for this list (segment)"
            - if params[:q]
              - params[:q].each do |param_key, param_value|
                = hidden_field_tag "q[#{param_key}]", param_value
            = submit_tag "Export", class: "btn btn-primary", data: {disable_with: "Exporting ..."}
      .span12
        #export-to-twilio-form{style: "display:none"}
          = form_tag search_exportTwilio_path, remote: true, class: "form-inline" do
            - if params[:q]
              - params[:q].each do |param_key, param_value|
                = hidden_field_tag "q[#{param_key}]", param_value
            = text_area_tag :message1, '', class: "input-xlarge", placeholder: "Enter a message to send (required)", required: true
            %br/
            = text_area_tag :message2, '', class: "input-xlarge", placeholder: "Enter a 2nd message to send. (Optional)"
            %br/
            Twilio-Wufoo Connection? #{select_tag :twiliowufoo_campaign, options_for_select([[nil, nil]] + TwilioWufoo.all.order(:name).collect{|twiliowufoo| [twiliowufoo.name, twiliowufoo.id]}, selected: params[:twiliowufoo_campaign]), class: "input"}
            \#{submit_tag "Send messages through Twilio", class: "btn btn-primary", data: { confirm: 'These messages will be added to the queue and sent as soon as possible. Are you sure you want to send these?' }}
  - else
    .row
      .span12{style: "margin-top: 30px;"}
        %p There are no Cohorts members that match your search.
